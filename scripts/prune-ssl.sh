#!/bin/bash
#set -x
set -o pipefail -e

config_dir=${1-/etc/nginx/conf.d}
mysql_host=${2-localhost}
mysql_database=${3-keitaro}

echo "Using $config_dir directory for searching configs"

cd "$config_dir/" || return

# Searching for configs generated by enable-ssl
search_config_generated_by_enable_ssl(){
  grep -l "enable-ssl" -- *.conf \
    | sed 's/.conf//g' \
    > domains_with_ssl_certs.txt
}

# Getting list of domains in DB
getting_domains_from_database(){
  mysql -h "$mysql_host" "$mysql_database" -sNe "SELECT name FROM keitaro_domains ORDER BY name" \
    | uniq \
    > domains_to_keep.txt
}
# Searching for custom domains
searching_custom_domains(){
  (grep -l "add-site" -- *.conf || echo "") | sed 's/.conf//g' >> domains_to_keep.txt
}

# Exclude domains exists in domains_to_keep.txt
excluse_customs_domains_from_delete_list(){
  comm -23 <(sort domains_with_ssl_certs.txt) <(sort domains_to_keep.txt) \
  > domains_to_delete.txt
  numbers=$(wc -l < domains_to_delete.txt)
  echo "Disabling $numbers ssl configs"
}


ensure_that_domain_not_present_in_database(){
  local domain="${1}"
  [[ $(mysql -sNe "select count(*) from ${mysql_database}.keitaro_domains where name = '${domain}'") -gt 0 ]]
}

testing_domains_to_remove(){
  declare -a domains_to_delete=()
  while read -r domain; do
    if ensure_that_domain_not_present_in_database "${domain}"; then
      pass
    else
      domains_to_delete+=("${domain}")
    fi
  done <domains_to_delete.txt
  echo "${domains_to_delete[@]}"| tr ' ' ','

}


# Call kctl-disable-ssl for each domain
remove_unused_domains(){
  domain_to_delete="${1}"
  if [[ $(echo "${domain_to_delete}"| grep -o "," | wc -l) == 0 ]]; then
    echo "Not found domains to delete"
    exit 0
  fi
  echo "The following domains will be removed:"
  echo "${domain_to_delete}"| tr ',' '\n-'

  if [ -z "$DRY_MODE" ]; then
    kctl-disable-ssl -D "${domain_to_delete}"
  else
    echo "kctl-disable-ssl -D ${domain}"
  fi

}

# Cleaning
cleaning(){
  rm domains_with_ssl_certs.txt domains_to_keep.txt domains_to_delete.txt
}


main(){
  search_config_generated_by_enable_ssl
  getting_domains_from_database
  searching_custom_domains
  excluse_customs_domains_from_delete_list
  remove_unused_domains "$(testing_domains_to_remove)"
  cleaning
}

main
