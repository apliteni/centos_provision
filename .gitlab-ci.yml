# Shared
before_script:
  - source ci/bin/prepare_envs

variables:
  BUILDS_FOLDER: builds
  GIT_URL: "git@gitlab.x.apli.tech:apliteni/keitaro/installer.git"
  LOCAL_BUILD_PATH: "${BUILDS_FOLDER}/${CI_COMMIT_REF_NAME}"
  REMOTE_BUILD_PATH: "${BUILDS_FOLDER}/${CI_COMMIT_REF_NAME}"
  NIGHTLY_BUILD_PATH: "builds/${CI_COMMIT_REF_NAME}/"
  LATEST_BUILD_PATH: "latest/"
  BUILDS_TTL: 7d

# Stages
stages:
  - build
  - quality_checks
  - upload
  - release
  - post_release
  - actions

# Build jobs
build_scripts:
  tags: [shell]
  stage: build
  interruptible: true
  script:
    - ci/bin/build/compile
    - ci/bin/testing/validate_scripts
  artifacts:
    expire_in: 1 hour
    paths:
      - scripts/install.sh
      - scripts/add-site.sh
      - scripts/enable-ssl.sh
      - scripts/fix-renewal-certs-cron-job.sh
      - scripts/test-run-command.sh
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$ACTION == "prune"'
      when: never
    - when: always

# Quality checks
.quality-checks-common:

run_rspec:
  stage: quality_checks
  interruptible: true
  tags: [ruby]
  script:
    - ci/bin/testing/validate_scripts
    - ci/bin/testing/install_bundle
    - ci/bin/testing/run_rspec
  cache:
    key: vendor
    paths:
      - scripts/vendor/
  dependencies:
    - build_scripts
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$ACTION == "prune"'
      when: never
    - when: on_success

# Deployment jobs
upload_build:
  stage: upload
  tags: [docker]
  image: apliteni/mc
  script:
    - ci/bin/deployment/create_build
    - ci/bin/deployment/prepare_mc
    - "ci/bin/upload ${LOCAL_BUILD_PATH} ${S3_BUCKET}/${NIGHTLY_BUILD_PATH}"
    - "ci/bin/notify \"[Installer] File https://${S3_HOST}/${S3_BUCKET}/${NIGHTLY_BUILD_PATH}/install.sh (${CI_COMMIT_SHORT_SHA}) has been uploaded.\""
  allow_failure: false
  dependencies:
    - build_scripts
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$ACTION == "prune"'
      when: never
    - when: on_success

# Release
tag_commit:
  stage: release
  tags: [shell]
  script:
    - ci/bin/deployment/allow_git_push
    - ci/bin/deployment/tag_commit
  allow_failure: false
  dependencies:
    - build_scripts
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$ACTION == "prune"'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /(master)/'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "INST-132"' # TODO!
      when: manual
    - if: '$ACTION == "build"'
      when: always
    - when: never

# Post release jobs
upload_as_latest:
  stage: post_release
  tags: [docker]
  image: apliteni/mc
  script:
    - ci/bin/deployment/allow_git_push
    - ci/bin/deployment/tag_commit
    - ci/bin/deployment/create_build
    - ci/bin/deployment/prepare_mc
    - "ci/bin/upload ${LOCAL_BUILD_PATH} ${S3_BUCKET}/${LATEST_BUILD_PATH}"
    - "ci/bin/notify \"[Installer] File https://${S3_HOST}/${S3_BUCKET}/${LATEST_BUILD_PATH}/install.sh (${CI_COMMIT_SHORT_SHA}) has been updated.\""
  allow_failure: false
  dependencies:
    - build_scripts
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: '$ACTION == "prune"'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /(master)/'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "INST-132"' # TODO!
      when: on_success
    - if: '$ACTION == "build"'
      when: always
    - when: never

prune_files:
  stage: actions
  tags: [docker]
  image: apliteni/mc
  allow_failure: false
  script:
    - ci/bin/prepare_mc
    - "ci/bin/prune ${S3_BUCKET}/${BUILDS_FOLDER} ${BUILDS_TTL}"
  only:
    variables:
      - $ACTION == 'prune'
