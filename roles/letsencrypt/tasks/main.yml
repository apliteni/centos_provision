---

- name: Install packages
  package:
    name: certbot
    state: installed

- name: Detect existence of Diffie-Hellman group
  stat:
    path: "/etc/ssl/certs/dhparam.pem"
  register: dhparam

- name: Generate strong Diffie-Hellman group
  command: "openssl dhparam  -out /etc/ssl/certs/dhparam.pem 2048"
  when: not dhparam.stat.exists

- name: Create letsencrypt directories
  file:
     path: "{{ item }}"
     state: directory
     owner: nginx
     mode: 0755
  with_items:
    - /etc/letsencrypt
    - /var/lib/letsencrypt
    - /var/log/letsencrypt

- name: Obtain Let's Encrypt cert
  command:
    certbot certonly --webroot --webroot-path={{letsencrypt_webroot_path}} \
                     {% for domain in letsencrypt_cert_domains %}--domain {{ domain }} {% endfor %} \
                     {% if letsencrypt_email != '' %}--email {{ letsencrypt_email }}{% else %}--register-unsafely-without-email{% endif %} \
                     --agree-tos \
                     --non-interactive \
                     --expand
  become_user: "{{ os_user }}"
  notify:
    - reload nginx

- name: Add ssl support to nginx config file (listen section)
  lineinfile:
    dest: /etc/nginx/conf.d/vhosts.conf
    insertafter: '^\s+listen 80'
    line:
      listen 443 ssl;

- name: Add ssl support to nginx config file (ssl params)
  blockinfile:
    dest: /etc/nginx/conf.d/vhosts.conf
    insertafter: '^\s+server_name'
    block: |
      ssl_certificate /etc/letsencrypt/live/{{ letsencrypt_cert_domains[0] }}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{ letsencrypt_cert_domains[0] }}/privkey.pem;

      ssl_session_cache   shared:SSL:10m;
      ssl_session_timeout 10m;

      ssl_prefer_server_ciphers on;

      ssl_dhparam /etc/ssl/certs/dhparam.pem;

      add_header Strict-Transport-Security max-age=15768000;
      add_header X-Content-Type-Options nosniff;
  notify:
    - reload nginx

- name: Schedule renewal cert task
  cron:
    name: Renew Let's Encrypt certs
    job: certbot renew
    hour: "{{ ansible_date_time.hour }}"
    minute: "{{ ansible_date_time.minute }}"
    user: "{{ os_user }}"
