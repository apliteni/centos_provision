- hosts: all
  connection: "{{connection}}"
  become: yes
  become_method: sudo
  vars_files:
    - vars/defaults.yml
    - vars/keitaro.yml
    - vars/server.yml
    - vars/ssl.yml
    - vars/mariadb.yml
    - vars/nginx.yml
    - vars/php.yml
    - vars/performance.roadrunner.yml
    - vars/performance.yml

  roles:
    - {role: '_prepare/print-debug-info',                  tags: 'print-debug-info,             always'}
    - {role: '_prepare/x-prepare-upgrade',                 tags: 'prepare-upgrade,              never, upgrade'}
    - {role: 'init/configure-journald',                    tags: 'configure-journald'}
    - {role: 'init/configure-timezone',                    tags: 'configure-timezone'}
    - {role: 'init/create-tracker-user-and-dirs',          tags: 'create-tracker-user-and-dirs'}
    - {role: 'init/disable-ipv6',                          tags: 'disable-ipv6'}
    - {role: 'init/disable-selinux',                       tags: 'disable-selinux'}
    - {role: 'init/disable-thp',                           tags: 'disable-thp'}
    - {role: 'init/enable-firewall',                       tags: 'enable-firewall',                    when: "skip_firewall != 'yes'"}
    - {role: 'init/enable-repo-remi',                      tags: 'enable-repo-remi'}
    - {role: 'init/increase-max-opened-files',             tags: 'increase-max-opened-files'}
    - {role: 'init/install-certbot',                       tags: 'install-certbot'}
    - {role: 'init/install-certs',                         tags: 'install-certs'}
    - {role: 'init/install-chrony',                        tags: 'install-chrony'}
    - {role: 'init/install-kctl-tools',                    tags: 'install-kctl-tools'}
    - {role: 'init/install-helper-packages',               tags: 'install-helper-packages'}
    - {role: 'init/install-postfix',                       tags: 'install-postfix'}
    - {role: 'init/tune-swap',                             tags: 'tune-swap,                    tune'}
    - {role: 'nginx/install-nginx',                        tags: 'install-nginx'}
    - {role: 'nginx/tune-nginx',                           tags: 'tune-nginx,                   tune'}
    - {role: 'nginx/x-upgrade-nginx-configs',              tags: 'upgrade-nginx-configs,        never, upgrade'}
    - {role: 'php/install-php',                            tags: 'install-php'}
    - {role: 'php/install-roadrunner',                     tags: 'install-roadrunner'}
    - {role: 'php/tune-php',                               tags: 'tune-php,                     tune'}
    - {role: 'php/tune-roadrunner',                        tags: 'tune-roadrunner,              tune'}
    - {role: 'php/x-upgrade-php',                          tags: 'upgrade-php,                  never, upgrade'}
    - {role: 'storage/clickhouse/x-install-clickhouse',    tags: 'install-clickhouse,           never'}
    - {role: 'storage/mariadb/_x-prepare-mariadb-upgrade', tags: 'prepare-mariadb-upgrade,      never, upgrade'}
    - {role: 'storage/mariadb/install-mariadb',            tags: 'install-mariadb'}
    - {role: 'storage/mariadb/tune-mariadb',               tags: 'tune-mariadb,                 tune'}
    - {role: 'storage/redis/install-redis',                tags: 'install-redis'}
    - {role: 'storage/redis/tune-redis',                   tags: 'tune-redis,                   tune'}
    - {role: 'tracker/install-tracker',                    tags: 'install-tracker'}
    - {role: 'tracker/tune-tracker',                       tags: 'tune-tracker,                 tune'}
    - {role: 'tracker/x-restore-db',                       tags: 'db_restore',                         when: "db_restore_path != ''"}
    - {role: 'wrap-up/force-restart-services',             tags: 'force-restart-services,       always'}
    - {role: 'wrap-up/post-upgrade',                       tags: 'post-upgrade,                 never, upgrade'}

  handlers:
    - name: restart mariadb
      service:
        name: mariadb
        state: restarted
        daemon-reload: true
    - name: restart redis
      service:
        name: redis
        state: restarted
        daemon-reload: true
    - name: restart php-fpm
      service:
        name: "{{php_version}}-php-fpm"
        state: restarted
        daemon-reload: true
    - name: restart roadrunner
      service:
        name: roadrunner
        state: restarted
        daemon-reload: true
    - name: restart nginx
      service:
        name: nginx
        state: restarted
        daemon-reload: true
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
