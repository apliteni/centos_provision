#!/usr/bin/env bash

RESPONSE_STATUSES_PATH=/var/log/nginx/access.status-log.old

escape() {
  local value="$1"
  if [[ $value == "" ]]; then
    echo 'null'
  elif [[ "${value}" =~ ^\".*\"$ ]]; then
    echo "${value}"
  elif [[ "${value}" =~ ^\{.*\}$ ]]; then
    echo "${value}"
  elif [[ "${value}" =~ ^\[.*\]$ ]]; then
    echo "${value}"
  elif [[ "${value}" =~ ^[0-9]+(\.[0-9]+)?$ ]]; then
    echo "${value}"
  else
    echo "\"${value}\""
  fi
}

print_json() {
  local key=""
  local value=""
  local pairs=""
  local pair=""
  while test ${#} -gt 0; do
    key="${1}"
    value="${2}"
    pair="$(escape "${key}"): $(escape "${value}")"
    if [[ "${pairs}" == "" ]]; then
      pairs="${pair}"
    else
      pairs="${pairs}, ${pair}"
    fi
    shift 2
  done
  echo "{${pairs}}"
}

versions_json() {
  print_json installer "\"$(installer_version)\"" \
             php "\"$(php_version)\"" \
             mariadb "\"$(mariadb_version)\"" \
             redis "\"$(redis_version)\""
}

installer_version() {
  grep 'installer_version' /root/.keitaro/installer_config | awk -F= '{print $2}'
}

php_version() {
  php --version | head -n1 | awk '{print $2}'
}

mariadb_version() {
  mysql --version | awk '{print $5}' | sed s/-MariaDB,$//g
}

redis_version() {
  redis-server --version | head -n1 | awk '{print $3}' | sed s/v=//g
}

responses_json() {
  local responses=""
  if [ -f ${RESPONSE_STATUSES_PATH} ]; then
    responses=$(sort ${RESPONSE_STATUSES_PATH} \
                | uniq -c \
                | awk '{print "\"" $2 "\":", $1 ", "}' \
                | sed '$ s/, $//g' \
                | tr -d "\n")
    responses="{${responses}}"
  fi
  echo "${responses}"
}

cpu_json() {
  model_name="$(awk -F': ' '/^model name/ {print $2}' /proc/cpuinfo | head -n1)"
  frequency_mhz="$(awk -F': ' '/^cpu MHz/ {print $2}' /proc/cpuinfo | head -n1)"
  cpu_cores="$(grep -w ^processor /proc/cpuinfo  | wc -l)"
  print_json model_name "${model_name}" cpu_cores "${cpu_cores}" frequency_mhz "${frequency_mhz}"
}

vmstat_json() {
  local keys=($(vmstat | tail -n2 | head -n1))
  local values=($(vmstat | tail -n1))
  local print_json_args=""
  for i in "${!keys[@]}"; do
    print_json_args="${print_json_args} ${keys[$i]} ${values[$i]}"
  done
  print_json ${print_json_args}
}


load() {
  load_1m="$(awk '{print $1}' /proc/loadavg)"
  load_5m="$(awk '{print $2}' /proc/loadavg)"
  load_15m="$(awk '{print $3}' /proc/loadavg)"
  print_json 1m "${load_1m}" 5m "${load_5m}" 15m "${load_15m}"
}

info_json() {
  uptime=$(awk '{print $1}' /proc/uptime | sed 's/\..*//g')
  timestamp="$(date --utc --iso-8601=seconds | sed 's/\+.*/Z/')"
  print_json uptime "${uptime}" load "$(load)" timestamp "${timestamp}" vmstat "$(vmstat_json)"
}

print_json versions "$(versions_json)" \
           responses "$(responses_json)" \
           cpu "$(cpu_json)" \
           info "$(info_json)"
