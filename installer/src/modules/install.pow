#!/usr/bin/env powscript


ensure_running_by_root()
  print_on_verbose 'Ensure script has been running by root'
  if isset $SKIP_CHECKS
    print_on_verbose "OK, skip actual checking of current user"
  else
    if $EUID = 0
      print_on_verbose 'OK, current user is root'
    else
      print_on_verbose 'NOK, current user is not root'
      print_err "$(translate errors.must_be_root)"
      exit 1


ensure_yum_installed()
  if ! is_installed 'yum'
    print_err "$(translate errors.yum_not_installed)"
    exit 1


install_ansible_if_not_installed()
  if ! is_installed ansible
    print_on_verbose "Try to install ansible"
    install_package epel-release
    install_package ansible


install_keitarotds()
  get_keitaro_provision
  command="ansible-playbook -i ${INVENTORY_FILE} ${KEITARO_PROVISION_DIRECTORY}/playbook.yml >${ANSIBLE_LOG}"
  run_command $command && handle_successful_install || ( handle_unsuccessful_install && exit 1 )


is_installed(command)
  print_on_verbose "Try to found $command"
  if isset $SKIP_CHECKS
    print_on_verbose "OK, skip actual checking of '$command' presence"
  else
    if $(sh -c "command -v $command > /dev/null")
      print_on_verbose "OK, $command found"
    else
      print_on_verbose "NOK, $command not found"
      return 1



install_package(package)
  run_command "yum install -y $package"


get_keitaro_provision()
  KEITARO_RELEASE_URL=https://github.com/keitarocorp/centos_provision/archive/master.tar.gz
  run_command "curl -sSL $KEITARO_RELEASE_URL | tar xz"


run_command(command)
  echo "$(translate 'messages.run_command') '$command'"
  if isset $PRESERVE
    print_on_verbose "Actual running disabled"
  else
    eval $command


handle_successful_install()
  echo "$(translate 'messages.successful_install')"
  echo "http://${VARS['license_ip']}/admin"
  echo "login: ${VARS['admin_login']}"
  echo "password: ${VARS['admin_password']}"


handle_unsuccessful_install()
  print_err "$(translate 'errors.unsuccessful_install')"
