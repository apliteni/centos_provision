- name: Set tracker_package_url to custom_package if custom_package starts with https://files.keitaro.io/
  when: (custom_package is defined) and (custom_package is match('^' + keitaro_files))
  set_fact:
    tracker_package_url: "{{ custom_package }}"
  
- name: Set tracker version to install if custom_package is a version
  set_fact:
    tracker_version_to_install: "{{ custom_package }}"
  when: (custom_package is defined) and (custom_package is match('^(\d+\.)+\d+'))

- name: Set tracker_version_to_install to latest version
  when: (tracker_package_url is not defined) and (tracker_version_to_install is not defined)
  block:
    - name: Set stability as 'stable' if custom_package is 'latest-stable'
      set_fact:
        tracker_stability: stable
      when: (custom_package is defined) and (custom_package == 'latest-stable')

    - name: Get tracker stability if tracker is intalled
      when: (tracker_stability is undefined) and (installed is defined) 
      block:
        - name: Get tracker stability
          community.mysql.mysql_query:
            login_db: "{{ db_name }}"
            query: "SELECT `value` FROM keitaro_settings WHERE `key` = 'is_beta_channel'"
          register: get_tracker_stability
          vars:
            ansible_python_interpreter: "/usr/bin/python3"


        - set_fact:
            tracker_stability: "{{ 'stable' if get_tracker_stability.query_result[0][0]['value'] == '0' else 'unstable' }}" 

    - name: Set default tracker stability as 'stable'
      set_fact:
        tracker_stability: stable
      when: (tracker_stability is undefined)

    - name: Get latest tracker version
      uri:
        url: "{{ keitaro_url }}/license/api/checkUpdate"
        method: GET
        body_format: json
        body:
          installation_method: approved
          kctl_version: "{{ kctl_version }}"
          version: "{{ keitaro_release }}"
          stability: "{{ tracker_stability }}"
          phpversion: "{{ php_release }}"
        http_agent: "{{ kctl_user_agent }}"
        return_content: yes
      failed_when: "'success::' not in get_latest_tracker_version.content"
      register: get_latest_tracker_version

    - name: Set tracker version to install
      set_fact:
        tracker_version_to_install: "{{ get_latest_tracker_version.content | replace('success::', '') }}"

- name: Set default tracker_package_url from tracker_version_to_install was set
  set_fact:
    tracker_package_url: "{{ keitaro_files }}/keitaro/releases/{{ tracker_version_to_install }}/package8.zip"
  when: tracker_package_url is undefined
