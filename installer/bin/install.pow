#!/usr/bin/env powscript

DICT={}

DICT['en.errors.yum_not_installed']='This installer works only on yum-based systems. Please run it on CentOS/RHEL/Fedora distros'
DICT['en.prompts.license_ip']='Please enter server IP'
DICT['en.prompts.license_key']='Please enter license key'
DICT['en.prompts.db_name']='Please enter database name'
DICT['en.prompts.db_user']='Please enter database user name'
DICT['en.prompts.db_password']='Please enter database user password'
DICT['en.prompts.admin_login']='Please enter keitaro admin login'
DICT['en.prompts.admin_password']='Please enter keitaro admin password'
DICT['en.prompts.license_ip']='Please enter server IP'

DICT['ru.errors.yum_not_installed']='Утановщик keitaro работает только с пакетным менеджером yum. Пожалуйста, запустите его в CentOS/RHEL/Fedora дистрибутиве'
DICT['ru.prompts.license_ip']='Укажите IP адрес сервера'
DICT['ru.prompts.license_key']='Укажите лицензионный ключ'
DICT['ru.prompts.db_name']='Укажите имя базы данных'
DICT['ru.prompts.db_user']='Укажите пользователя базы данных'
DICT['ru.prompts.db_password']='Укажите пароль пользователя базы данных'
DICT['ru.prompts.admin_login']='Укажите имя администратора keitaro'
DICT['ru.prompts.admin_password']='Укажите пароль администратора keitaro'


VARS={}


print_err(message)
  echo $message >&2


usage()
  progname=$(basename $0)
  print_err "$progname installs Keitarotds"
  print_err
  print_err "Usage: $progname [-psv] [-l en|ru]"
  print_err
  print_err "  -p"
  print_err "    The -p (preserve installation) option causes $progname to preserve the invoking of installation commands. Installation commands will be printed to stdout instead."
  print_err
  print_err "  -s"
  print_err "    The -s (skip checks) option causes $progname to skip checks of yum/ansible presence."
  print_err
  print_err "  -v"
  print_err "    The -v (verbose mode) option causes $progname to display more verbose information of installation process."
  print_err
  print_err "  -l <lang>"
  print_err "    By default $progname try to detect language from LANG environment variable, but you can explicitly set language with -l option."
  print_err "    Only en and ru (for English and Russian) values supported now."


print_on_verbose(message)
  if $VERBOSE is "true"
    echo $message


is_installed(command)
  if isset $SKIP_CHECKS
    print_on_verbose "Actual check of '$command' presence skipped"
  else
    sh -c 'command -v $command'


ensure_yum_installed()
  print_on_verbose 'Try to found yum'
  if is_installed 'yum'
    print_on_verbose 'OK, yum found'
  else
    print_on_verbose 'NOK, yum not found'
    print_err "$(translate errors.yum_not_installed)"
    exit 1


translate(key)
  i18n_key=$UI_LANG.$key
  echo $DICT[$i18n_key]


read_var(var_name)
  prompt=$(translate prompts.$var_name)
  echo -n "$prompt > "
  read -r variable
  VARS[$var_name]=$variable


detect_language(lang_value)
  if $lang_value match ^ru_[[:alpha:]]+\.UTF-8$
    UI_LANG=ru


autodetect_language()
  if not empty $LC_ALL
    detect_language $LC_ALL
  else
    if not empty $LC_MESSAGES
      detect_language $LC_MESSAGES
    else
      detect_language $LANG


UI_LANG=en
autodetect_language


while getopts ":hpvsl:" opt
  switch $opt
    case p
      PRESERVE=true
    case s
      SKIP_CHECKS=true
    case v
      VERBOSE=true
    case l
      switch $OPTARG
        case en
          UI_LANG=en
        case ru
          UI_LANG=ru
        case *
          print_err "Specified language \"$OPTARG\" is not supported"
          exit 1
    case :
      print_err "Option -$OPTARG requires an argument."
      exit 1
    case h
      usage
      exit 0
    case \?
      usage
      exit 1


print_on_verbose "Verbose mode: on"
print_on_verbose "Language: ${UI_LANG}"


ensure_yum_installed

#if ! is_ansible_installed
#  print_on_verbose "Ansible executable not found, try to install ansible"
#  install_ansible
#else
#  print_on_verbose "Ansible executable found"


read_var 'license_ip'
read_var 'license_key'
read_var 'db_name'
read_var 'db_user'
read_var 'db_password'
read_var 'admin_login'
read_var 'admin_password'


cat > .keitarotds-hosts <<EOF
[server]
localhost connection=local

[server:vars]
db_name = $VARS['db_name']
db_user = $VARS['db_user']
db_password = $VARS['db_password']
license_ip = $VARS['license_ip']
license_key = $VARS['license_key']
admin_login = $VARS['admin_login']
admin_password = $VARS['admin_password']
EOF

